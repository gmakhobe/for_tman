extends ../layout

block style
    link(href='http://vjs.zencdn.net/6.6.0/video-js.css', rel='stylesheet')
    if movie.backdrop_path
        style.
            .banner {
                background-position: center;
                background-repeat: no-repeat;
                background-size: cover;
                background-image: url('#{'http://image.tmdb.org/t/p/original/' + movie.backdrop_path}');
                width: 100%;
                height: 435px;
                background-position-y: 8%;
            }
    style.
        .movie-desc {
            position: relative;
        }
        /*.movie-footer {*/
            /*position: absolute;*/
            /*bottom: 20px;*/
            /*width: 96%;*/
        /*}*/
        .episode .card-header {
            padding: 5px;
            text-align: center;
        }
        .episode h5 button {
            color: #000;
        }

        .btn-group-justified {
            display: flex;
        }
        .btn-group-justified .btn {
            flex-grow: 1;
            outline: none!important;
        }
        #comments {
            width: 100%;
        }

block content
    .row
        .col-md-12
            .banner
            .container.mt-3
                .card
                    .card-body
                        .row
                            .col-md-3
                                img.img-fluid(src='http://image.tmdb.org/t/p/original/' + movie.poster_path)
                            .col-md-9.movie-desc
                                h1 #{movie.title}
                                hr
                                p #{movie.overview}
                                hr
                                button.btn.btn-danger.like(data-like-status=user.liked ? '1' : '0')
                                    i.fa.fa-heart
                                    | &nbsp;&nbsp;
                                    span.text
                                        if user.liked
                                            | #{__('Unlike')}
                                        else
                                            | #{__('Like')}
                                .clearfix
                                .movie-footer
                                    if movie.credits.cast.length > 0
                                        hr
                                        .row
                                            each actor in movie.credits.cast.splice(0, 6)
                                                .col-md-2
                                                    .card
                                                        if actor.profile_path
                                                            img.card-img(src='http://image.tmdb.org/t/p/original/' + actor.profile_path)
                                                        .card-body(style='padding:5px')
                                                            p.text-center
                                                                b #{actor.name}
                                                                br
                                                                em #{actor.character}
                                    hr
                                    .row.text-center
                                        .col-md-3
                                            b #{__('Note')}:
                                            h4
                                                .badge.badge-info #{movie.vote_average} / 10
                                        .col-md-3
                                            b #{__('Production year')}
                                            h4
                                                .badge.badge-primary #{new Date(movie.date).getFullYear()}
                                        if movie.time
                                            .col-md-3
                                                b #{__('Runtime')}
                                                    h4
                                                        .badge.badge-info #{__('%s minutes', movie.time)}
                                        if movie.media_type === 'tv'
                                            .col-md-3
                                                b #{__('Seasons')}
                                                h4
                                                    .badge.badge-info #{Object.keys(movie.seasons).length}

                hr
                .card
                    .card-body
                        if movie.media_type === 'movie'
                            video.video-js(controls='', preload='none', poster='http://image.tmdb.org/t/p/original/' + movie.backdrop_path, data-setup='{"fluid": true}')
                                source(src='/' + movie.id + '/stream', type="video/" + movie.type)
                                track(src='/' + movie.id + '/subtitles/en', kind='subtitles', srclang='en', label='English')
                                if current_user.language !== 'en'
                                    track(src='/' + movie.id + '/subtitles/' + current_user.language, kind='subtitles', srclang=current_user.language, default)
                                p.vjs-no-js
                                    | To view this video please enable JavaScript, and consider upgrading to a web browser that
                                    a(href='http://videojs.com/html5-video-support/', target='_blank') supports HTML5 video
                        else
                            #accordionSeasons
                                .btn-group.btn-group-justified#accordionSeasons
                                    each episodes, season in movie.seasons
                                        a.btn.btn-primary(data-toggle='collapse', href='#season-' + season)
                                            | #{__('Season %s', season)}
                                each episodes, season in movie.seasons
                                    .collapse(id='season-' + season, data-parent='#accordionSeasons')
                                        .card.card-body
                                            #accordion
                                                - var i = 0
                                                each episode in episodes
                                                    .card.episode
                                                        .card-header
                                                            h5.mb-0
                                                                button.btn.btn-link.btn-episode(data-toggle='collapse', data-id=episode.id, data-target='#season-' + season + '-episode-' + episode.id) #{__('Episode %s', ++i)} - #{episode.title}
                                                        .collapse(data-parent='#accordion', id='season-' + season + '-episode-' + episode.id)
                                                            .card-body
                                                                video.video-js(controls='', preload='none', poster='http://image.tmdb.org/t/p/original/' + movie.backdrop_path, data-setup='{"fluid": true}')
                                                                    source(src='/' + episode.id + '/stream', type="video/webm")
                                                                    p.vjs-no-js
                                                                        | To view this video please enable JavaScript, and consider upgrading to a web browser that
                                                                        a(href='http://videojs.com/html5-video-support/', target='_blank') supports HTML5 video
                hr

                h3 #{__('Comments')}

                .row
                    #comments
                        each comment in comments
                            .col-md-12.mb-2.mt-2
                                .card
                                    .card-body
                                        .row
                                            .col-md-2
                                                a(href='/user/' + comment.username)
                                                    img.img-fluid(src=comment.user_avatar)
                                            .col-md-10
                                                h5 #{comment.username}
                                                hr
                                                p #{comment.content}
                                    .card-footer
                                        if comment.user_id === userId
                                            button.btn.btn-danger.delete-comment(data-comment-id=comment.id, type='button') #{__('Delete')}
                                        small
                                            em.float-right #{moment(comment.created_at).fromNow()}
                    .col-md-12
                        hr
                        .card
                            .card-body
                                form(method='post', action='/' + movie.original + '/comment', data-ajax, data-ajax-callback='afterPostComment')
                                    .form-group
                                        label #{__('Content')}
                                        textarea.form-control(name='content')
                                    button.btn.btn-primary.float-right(type='submit') #{__('Send')}




block scripts
    script(src='http://vjs.zencdn.net/ie8/1.1.2/videojs-ie8.min.js')
    script(src='http://vjs.zencdn.net/6.6.0/video.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.20.1/moment-with-locales.min.js')
    script#commentTemplate(type='text/html').
        <div class="col-md-12 mb-2 mt-2">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-2">
                            <a href="/user/#{user.username}"><img src="#{user.avatar}" class="img-fluid"></a>
                        </div>
                        <div class="col-md-10">
                            <h5>#{user.username}</h5>
                            <hr>
                            <p>{CONTENT}</p>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <button class="btn btn-danger delete-comment" data-comment-id="{COMMENT_ID}" data-type="button">#{__('Delete')}</button>
                    <small><em class="float-right">{CREATED_DATE}</em></small>
                </div>
            </div>
        </div>
    script(type='text/javascript').
        function afterPostComment(req, res) {
          var textarea = $('textarea[name="content"]')
          var content = textarea.val().replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;')
          textarea.val('')
          var html = $('#commentTemplate').html()
          html = html.replace('{CONTENT}', content)
          html = html.replace('{COMMENT_ID}', res.data.comment.id)
          html = html.replace('{CREATED_DATE}', moment(new Date()).fromNow())

          $('#comments').append(html)
          initDeleteCommentEvent()
        }
        $('.btn-episode').on('click', function () {
          var btn = $(this)
          var element = btn.attr('data-target')

          videojs($(element).find('video')[0]).addRemoteTextTrack({
            kind: "subtitle",
            lang: "en",
            label: "English",
            src: '/' + btn.attr('data-id') + '/subtitles/en'
          }, true)
        })
        function initDeleteCommentEvent() {
          $('.delete-comment').unbind('click').on('click', function (e) {
            e.preventDefault()
            var button = $(this)
            var id = button.attr('data-comment-id')

            $.ajax({method: 'DELETE', url: '/comment/' + id})
            button.parent().parent().parent().slideUp(250)
          })
        }
        initDeleteCommentEvent()
        $('.like').on('click', function (e) {
          e.preventDefault()
          var button = $(this)
          var state = button.attr('data-like-status')
          var text = state === '0' ? '#{__('Unlike')}' : '#{__('Like')}'

          button.find('.text').html(text)
          $.get('/#{movie.original}/like')
          button.attr('data-like-status', state === '1' ? '0' : '1')
        })

        var elements = $('body').find('video')
        for (var i = 0; i < elements.length; i++)
            videojs(elements[i]).on('error', function () {
              var el = this.el()
              $(el).parent().append('<div class="alert alert-danger">#{__('No torrent found')}</div>')
              el.remove()
            })
    if current_user.language !== 'en'
        script(type='text/javascript').
          $('.btn-episode').on('click', function () {
            var btn = $(this)
            var element = btn.attr('data-target')

            videojs($(element).find('video')[0]).addRemoteTextTrack({
              kind: "subtitle",
              lang: "#{current_user.language}",
              label: "#{current_user.language}",
              src: '/' + btn.attr('data-id') + '/subtitles/#{current_user.language}',
            }, true)
          })